# Generated by Django 4.2.3 on 2023-07-16 18:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import supplier.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth_app', '0001_initial'),
        ('buyer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryCarrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Tax as a Percentage (00.00)')),
                ('tax_ar', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Tax as a Percentage (00.00)')),
                ('tax_fr', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Tax as a Percentage (00.00)')),
                ('tax_de', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Tax as a Percentage (00.00)')),
                ('tax_en', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Tax as a Percentage (00.00)')),
                ('delivery_period', models.IntegerField(blank=True, null=True, verbose_name='Days of Delivery')),
                ('delivery_period_ar', models.IntegerField(blank=True, null=True, verbose_name='Days of Delivery')),
                ('delivery_period_fr', models.IntegerField(blank=True, null=True, verbose_name='Days of Delivery')),
                ('delivery_period_de', models.IntegerField(blank=True, null=True, verbose_name='Days of Delivery')),
                ('delivery_period_en', models.IntegerField(blank=True, null=True, verbose_name='Days of Delivery')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Order Id')),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('VIEWED BY SUPPLER', 'VIEWED BY SUPPLER'), ('ACCEPTED BY SUPPLER', 'ACCEPTED BY SUPPLER'), ('IN DELIVERY', 'IN DELIVERY'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'REJECTED'), ('CANCELLED', 'CANCELLED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=256, verbose_name='Order Status')),
                ('status_ar', models.CharField(choices=[('PENDING', 'PENDING'), ('VIEWED BY SUPPLER', 'VIEWED BY SUPPLER'), ('ACCEPTED BY SUPPLER', 'ACCEPTED BY SUPPLER'), ('IN DELIVERY', 'IN DELIVERY'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'REJECTED'), ('CANCELLED', 'CANCELLED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=256, null=True, verbose_name='Order Status')),
                ('status_fr', models.CharField(choices=[('PENDING', 'PENDING'), ('VIEWED BY SUPPLER', 'VIEWED BY SUPPLER'), ('ACCEPTED BY SUPPLER', 'ACCEPTED BY SUPPLER'), ('IN DELIVERY', 'IN DELIVERY'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'REJECTED'), ('CANCELLED', 'CANCELLED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=256, null=True, verbose_name='Order Status')),
                ('status_de', models.CharField(choices=[('PENDING', 'PENDING'), ('VIEWED BY SUPPLER', 'VIEWED BY SUPPLER'), ('ACCEPTED BY SUPPLER', 'ACCEPTED BY SUPPLER'), ('IN DELIVERY', 'IN DELIVERY'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'REJECTED'), ('CANCELLED', 'CANCELLED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=256, null=True, verbose_name='Order Status')),
                ('status_en', models.CharField(choices=[('PENDING', 'PENDING'), ('VIEWED BY SUPPLER', 'VIEWED BY SUPPLER'), ('ACCEPTED BY SUPPLER', 'ACCEPTED BY SUPPLER'), ('IN DELIVERY', 'IN DELIVERY'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'REJECTED'), ('CANCELLED', 'CANCELLED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=256, null=True, verbose_name='Order Status')),
                ('currency', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Price')),
                ('total_price_ar', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Price')),
                ('total_price_fr', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Price')),
                ('total_price_de', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Price')),
                ('total_price_en', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total Price')),
                ('agreed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Agreed Price')),
                ('agreed_price_ar', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Agreed Price')),
                ('agreed_price_fr', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Agreed Price')),
                ('agreed_price_de', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Agreed Price')),
                ('agreed_price_en', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Agreed Price')),
                ('paid_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Paid Price')),
                ('paid_price_ar', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Paid Price')),
                ('paid_price_fr', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Paid Price')),
                ('paid_price_de', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Paid Price')),
                ('paid_price_en', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Paid Price')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('discount_ar', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('discount_fr', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('discount_de', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('discount_en', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Completed')),
                ('accepted_on', models.DateField(blank=True, null=True, verbose_name='Accepted on')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Delivery Date')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_on', models.DateTimeField(blank=True, null=True, verbose_name='Updated on')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer', to='auth_app.clientprofile')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier', to='auth_app.clientprofile')),
            ],
            options={
                'ordering': ('-id', '-updated_on'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_ar', models.TextField(null=True, verbose_name='Description')),
                ('description_fr', models.TextField(null=True, verbose_name='Description')),
                ('description_de', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='Safe Url')),
                ('currency', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('currency_ar', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('currency_fr', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('currency_de', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('currency_en', models.CharField(blank=True, max_length=6, null=True, verbose_name='Currency')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('price_ar', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('price_fr', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('price_de', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('price_en', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Discount as a Percentage')),
                ('stock', models.IntegerField(blank=True, null=True, verbose_name='stock')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified by Admin')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth_app.clientprofile')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('product_count', models.IntegerField(default=0, verbose_name='Number of products')),
                ('image', models.FileField(default='test/django.png', upload_to=supplier.models.get_file_path, verbose_name='Image')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_ar', models.TextField(null=True, verbose_name='Description')),
                ('description_fr', models.TextField(null=True, verbose_name='Description')),
                ('description_de', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=13, verbose_name='Price')),
                ('price_ar', models.DecimalField(decimal_places=2, max_digits=13, null=True, verbose_name='Price')),
                ('price_fr', models.DecimalField(decimal_places=2, max_digits=13, null=True, verbose_name='Price')),
                ('price_de', models.DecimalField(decimal_places=2, max_digits=13, null=True, verbose_name='Price')),
                ('price_en', models.DecimalField(decimal_places=2, max_digits=13, null=True, verbose_name='Price')),
                ('currency', models.CharField(max_length=7, verbose_name='Currency')),
                ('currency_ar', models.CharField(max_length=7, null=True, verbose_name='Currency')),
                ('currency_fr', models.CharField(max_length=7, null=True, verbose_name='Currency')),
                ('currency_de', models.CharField(max_length=7, null=True, verbose_name='Currency')),
                ('currency_en', models.CharField(max_length=7, null=True, verbose_name='Currency')),
                ('contract_count', models.IntegerField(default=0, verbose_name='Number of contracts')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='WishListProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.clientprofile')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Store Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Store Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Store Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Store Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Store Name')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='Safe Url')),
                ('image', models.FileField(default='test/django.png', upload_to=supplier.models.get_file_path, verbose_name='Service Image')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified by Admin')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Safe Url')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=supplier.models.get_file_path, verbose_name='Service Image')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.service')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to=supplier.models.get_video_path, verbose_name='Video')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('image', models.FileField(default='test/django.png', upload_to=supplier.models.get_file_path, verbose_name='Image')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Review Context')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.clientprofile')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=6, verbose_name='Currency')),
                ('min_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Min Price')),
                ('max_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Max Price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to=supplier.models.get_file_path, verbose_name='Image')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True, verbose_name='Safe Url')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_ar', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_de', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ManyToManyField(blank=True, related_name='store_product', to='supplier.store'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.productsubcategory'),
        ),
        migrations.CreateModel(
            name='OrderShippingDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Shipping Address 1')),
                ('address_2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Shipping Address 1')),
                ('carrier', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.deliverycarrier')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='supplier.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('quantity_ar', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('quantity_fr', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('quantity_de', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('quantity_en', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('min_total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Min Total Price')),
                ('max_total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Max Total Price')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buyer.cart')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.productcolor')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.productmaterial')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.order')),
                ('price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.productprice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(verbose_name='Notes')),
                ('notes_ar', models.TextField(null=True, verbose_name='Notes')),
                ('notes_fr', models.TextField(null=True, verbose_name='Notes')),
                ('notes_de', models.TextField(null=True, verbose_name='Notes')),
                ('notes_en', models.TextField(null=True, verbose_name='Notes')),
                ('created_on', models.DateField(default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_on', models.DateTimeField(blank=True, null=True, verbose_name='Updated on')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='supplier.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
